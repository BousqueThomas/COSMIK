import pandas as pd 
import numpy as np
from typing import Dict, Tuple, List
import matplotlib.pyplot as plt 
from scipy import signal

# Lecture des données du fichier resultat MMPose
def read_mmpose_file(nom_fichier):
    donnees = []
    with open(nom_fichier, 'r') as f:
        for ligne in f:
            ligne = ligne.strip().split(',')  # Séparer les valeurs par virgule
            donnees.append([float(valeur) for valeur in ligne[2:]])  # Convertir les valeurs en float, en excluant le num_sample

    # print('donnees=',donnees)
    return donnees


def get_cams_params_challenge()->dict:
    donnees = {   
        "26578": {
            "mtx" : np.array([[ 1677.425415046875, 0.0, 537.260986328125,], [ 0.0, 1677.491943359375, 959.772338875,], [ 0.0, 0.0, 1.0,],]),
            "dist" : [ -0.000715875, 0.002123484375, 4.828125e-06, 7.15625e-06,],
            "rotation" : [ -0.21337719060501195, 2.5532219190152965, -1.6205092826416467,],
            "translation" : [ 1.6091977643464546, 1.15829414576161, 3.032840223956974,],
        },

        "26585": {
            "rotation": [1.0597472109795532, -1.9011820504536852, 1.1957319917079565],
            "translation": [0.9595297628274925, 1.0464733874997356, 2.270212894656588],
            "dist" : [ -0.000745328125, 0.002053671875, 1.921875e-06, -5.140625e-06,],
            "mtx": np.array([[1674.0107421875, 0.00000000e+00, 534.026550296875],[0.00000000e+00, 1673.7362060625, 982.399719234375],[0.00000000e+00, 0.00000000e+00, 1.00000000e+00]])
        },

        "26587": {
            "rotation": [1.677775501516754, -1.029276831328994, 0.6842023176393756],
            "translation": [-0.5569369630815385, 1.2934348024206597, 1.991617525249041],
            "dist" : [ -0.000744265625, 0.002104171875, 4.328125e-06, 3.109375e-06,],
            "mtx": np.array([ [ 1675.204223640625, 0.0, 540.106201171875,], [ 0.0, 1675.234985359375, 955.9697265625,], [ 0.0, 0.0, 1.0,],])
        },

        "26579": {
            "rotation": [ 1.473263729647568, -1.3161084173646604, 0.8079167854373644,],
            "translation": [ 0.057125196677030775, 1.3404023742147497, 2.355331127576366,],
            "dist" : [ -0.000690171875, 0.00212715625, 1.7359375e-05, -6.96875e-06,],
            "mtx": np.array([ [ 1680.458740234375, 0.0, 542.9306640625,], [ 0.0, 1680.66064453125, 923.3432006875,], [ 0.0, 0.0, 1.0,],])
        },

        "26580": {
            "rotation": [ 0.8298688840152564, 1.8694631842579277, -1.5617258826886953,],
            "translation": [ 0.9904842020364727, 1.0246693922638055, 4.957845631470926,],
            "dist" : [ -0.00071015625, 0.0021813125, 9.609375e-06, -6.109375e-06,],
            "mtx": np.array([ [ 1685.629028328125, 0.0, 510.6878356875,], [ 0.0, 1685.509521484375, 969.57385253125,], [ 0.0, 0.0, 1.0,],])
        },

        "26582": {
            "rotation": [ 1.9667687809278538, 0.43733173855510793, -0.7311269859165496,],
            "translation": [ -1.5197560224152755, 0.8110430837593252, 4.454761186711195,],
            "dist" : [ -0.000721609375, 0.002187234375, 9.5e-06, 1.078125e-05,],
            "mtx": np.array([ [ 1681.244873046875, 0.0, 555.02630615625,], [ 0.0, 1681.075439453125, 948.137390140625,], [ 0.0, 0.0, 1.0,],])
        },

        "26583": {
            "rotation": [ 1.2380223927668794, 1.2806411592382023, -1.098415193550419,],
            "translation": [ -0.2799787691771713, 0.4419235311792159, 5.345299193754642,],
            "dist" : [ -0.000747609375, 0.00213728125, 1.51875e-05, 4.546875e-06,],
            "mtx": np.array([ [ 1673.79724121875, 0.0, 534.494567875,], [ 0.0, 1673.729614265625, 956.774108890625,], [ 0.0, 0.0, 1.0,],])
        },

        "26584": {
            "rotation": [ 2.0458341465177643, 0.01911893903238088, -0.011457679397024361,],
            "translation": [ -1.6433009675366304, 0.9777773776650169, 2.54863840307948,],
            "dist" : [ -0.00071109375, 0.002051796875, 2.03125e-07, -2.94375e-05,],
            "mtx": np.array([ [ 1674.07165528125, 0.0, 569.56646728125,], [ 0.0, 1673.930786140625, 936.65380859375,], [ 0.0, 0.0, 1.0,],])
        },

        "26586": {
            "rotation": [ 0.7993494245198899, -2.2782754140077803, 1.252697486024887,],
            "translation": [ 1.4363111933696429, 0.627047250057601, 2.828701383630391,],
            "dist" : [ -0.000729765625, 0.00215034375, -8.46875e-06, -8.078125e-06,],
            "mtx": np.array([ [ 1681.598388671875, 0.0, 513.20837403125,], [ 0.0, 1681.509887703125, 964.994873046875,], [ 0.0, 0.0, 1.0,],]),
            # "projection" : np.array
        },
    }
    return donnees

def read_mmpose_scores(liste_fichiers):
    all_scores= []
    for f in liste_fichiers :
        data= np.loadtxt(f, delimiter=',')
        all_scores.append(data[:, 1])
    return np.array(all_scores).transpose().tolist()

def butterworth_filter(data, cutoff_frequency, order=5, sampling_frequency=60):
    nyquist = 0.5 * sampling_frequency
    normal_cutoff = cutoff_frequency / nyquist
    b, a = signal.butter(order, normal_cutoff, btype='low', analog=False)
    filtered_data = signal.filtfilt(b, a, data, axis=0)
    return filtered_data
